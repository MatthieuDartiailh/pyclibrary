name: Build and upload wheels
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 3'
  push:
    tags:
      - '*'

jobs:
  build_sdist:
    name: Build sdist and wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Build sdist
        run: |
          pip install --upgrade pip
          pip install wheel
          python setup.py sdist bdist_wheel
      - name: Test sdist and wheel
        run: |
          pip install pytest
          pip install dist/*.tar.gz
          cd ..
          python -m pytest pyclibrary/tests
          pip uninstall pyclibrary --yes
          pip install pyclibrary/dist/*.whl
          python -m pytest pyclibrary/tests
      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: dist/*

  publish:
    if: github.event_name == 'push'
    needs: [build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test:
          # repository_url: https://test.pypi.org/legacy/

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and create a GitHub Release
    runs-on: ubuntu-latest
    needs:
    - publish

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.0
      with:
        password: ${{ secrets.pypi_password }}
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --generate-notes
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
